(function () {
    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
    var __module = nodeEnv ? module : { exports: {} };
    var __filename = 'engine-dev/cocos2d/core/renderer/canvas/renderers/sprite/tiled.js';
    var __require = nodeEnv ? function (request) {
        return require(request);
    } : function (request) {
        return __quick_compile__.require(request, __filename);
    };
    function __define(exports, require, module) {
        if (!nodeEnv) {
            __quick_compile__.registerModule(__filename, module);
        }
                'use strict';
        Object.defineProperty(exports, '__esModule', { value: true });
        exports.default = undefined;
        var _createClass = function () {
            function defineProperties(target, props) {
                for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ('value' in descriptor)
                        descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor);
                }
            }
            return function (Constructor, protoProps, staticProps) {
                if (protoProps)
                    defineProperties(Constructor.prototype, protoProps);
                if (staticProps)
                    defineProperties(Constructor, staticProps);
                return Constructor;
            };
        }();
        var _assembler = require('../../../assembler');
        var _assembler2 = _interopRequireDefault(_assembler);
        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
        }
        function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
                throw new TypeError('Cannot call a class as a function');
            }
        }
        function _possibleConstructorReturn(self, call) {
            if (!self) {
                throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called');
            }
            return call && (typeof call === 'object' || typeof call === 'function') ? call : self;
        }
        function _inherits(subClass, superClass) {
            if (typeof superClass !== 'function' && superClass !== null) {
                throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
            }
            subClass.prototype = Object.create(superClass && superClass.prototype, {
                constructor: {
                    value: subClass,
                    enumerable: false,
                    writable: true,
                    configurable: true
                }
            });
            if (superClass)
                Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
        }
        var utils = require('../utils');
        var CanvasTiledSprite = function (_Assembler) {
            _inherits(CanvasTiledSprite, _Assembler);
            function CanvasTiledSprite() {
                _classCallCheck(this, CanvasTiledSprite);
                return _possibleConstructorReturn(this, (CanvasTiledSprite.__proto__ || Object.getPrototypeOf(CanvasTiledSprite)).apply(this, arguments));
            }
            _createClass(CanvasTiledSprite, [{
                    key: 'draw',
                    value: function draw(ctx, sprite) {
                        var node = sprite.node;
                        var matrix = node._worldMatrix;
                        var matrixm = matrix.m;
                        var a = matrixm[0], b = matrixm[1], c = matrixm[4], d = matrixm[5], tx = matrixm[12], ty = matrixm[13];
                        ctx.transform(a, b, c, d, tx, ty);
                        ctx.scale(1, -1);
                        utils.context.setGlobalAlpha(ctx, node.opacity / 255);
                        var frame = sprite.spriteFrame;
                        var rect = frame._rect;
                        var tex = frame._texture;
                        var sx = rect.x;
                        var sy = rect.y;
                        var sw = frame._rotated ? rect.height : rect.width;
                        var sh = frame._rotated ? rect.width : rect.height;
                        var image = utils.getFrameCache(tex, node._color, sx, sy, sw, sh);
                        var w = node.width, h = node.height, x = -node.anchorX * w, y = -node.anchorY * h;
                        y = -y - h;
                        ctx.translate(x, y);
                        ctx.fillStyle = ctx.createPattern(image, 'repeat');
                        ctx.fillRect(0, 0, w, h);
                        return 1;
                    }
                }]);
            return CanvasTiledSprite;
        }(_assembler2.default);
        exports.default = CanvasTiledSprite;
        module.exports = exports['default'];
    }
    if (nodeEnv) {
        __define(__module.exports, __require, __module);
    } else {
        __quick_compile__.registerModuleFunc(__filename, function () {
            __define(__module.exports, __require, __module);
        });
    }
}());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,