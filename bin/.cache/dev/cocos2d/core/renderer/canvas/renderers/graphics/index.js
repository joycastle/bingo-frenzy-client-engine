(function () {
    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
    var __module = nodeEnv ? module : { exports: {} };
    var __filename = 'engine-dev/cocos2d/core/renderer/canvas/renderers/graphics/index.js';
    var __require = nodeEnv ? function (request) {
        return require(request);
    } : function (request) {
        return __quick_compile__.require(request, __filename);
    };
    function __define(exports, require, module) {
        if (!nodeEnv) {
            __quick_compile__.registerModule(__filename, module);
        }
                'use strict';
        Object.defineProperty(exports, '__esModule', { value: true });
        exports.default = undefined;
        var _createClass = function () {
            function defineProperties(target, props) {
                for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ('value' in descriptor)
                        descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor);
                }
            }
            return function (Constructor, protoProps, staticProps) {
                if (protoProps)
                    defineProperties(Constructor.prototype, protoProps);
                if (staticProps)
                    defineProperties(Constructor, staticProps);
                return Constructor;
            };
        }();
        var _assembler = require('../../../assembler');
        var _assembler2 = _interopRequireDefault(_assembler);
        var _impl = require('./impl');
        var _impl2 = _interopRequireDefault(_impl);
        var _graphics = require('../../../../graphics/graphics');
        var _graphics2 = _interopRequireDefault(_graphics);
        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : { default: obj };
        }
        function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
                throw new TypeError('Cannot call a class as a function');
            }
        }
        var CanvasGraphicsAssembler = function () {
            function CanvasGraphicsAssembler() {
                _classCallCheck(this, CanvasGraphicsAssembler);
            }
            _createClass(CanvasGraphicsAssembler, [
                {
                    key: 'init',
                    value: function init() {
                    }
                },
                {
                    key: 'draw',
                    value: function draw(ctx, comp) {
                        var node = comp.node;
                        var matrix = node._worldMatrix;
                        var matrixm = matrix.m;
                        var a = matrixm[0], b = matrixm[1], c = matrixm[4], d = matrixm[5], tx = matrixm[12], ty = matrixm[13];
                        ctx.transform(a, b, c, d, tx, ty);
                        ctx.save();
                        ctx.globalAlpha = node.opacity / 255;
                        var style = comp._impl.style;
                        ctx.strokeStyle = style.strokeStyle;
                        ctx.fillStyle = style.fillStyle;
                        ctx.lineWidth = style.lineWidth;
                        ctx.lineJoin = style.lineJoin;
                        ctx.miterLimit = style.miterLimit;
                        var endPath = true;
                        var cmds = comp._impl.cmds;
                        for (var i = 0, l = cmds.length; i < l; i++) {
                            var cmd = cmds[i];
                            var ctxCmd = cmd[0], args = cmd[1];
                            if (ctxCmd === 'moveTo' && endPath) {
                                ctx.beginPath();
                                endPath = false;
                            } else if (ctxCmd === 'fill' || ctxCmd === 'stroke' || ctxCmd === 'fillRect') {
                                endPath = true;
                            }
                            if (typeof ctx[ctxCmd] === 'function') {
                                ctx[ctxCmd].apply(ctx, args);
                            } else {
                                ctx[ctxCmd] = args;
                            }
                        }
                        ctx.restore();
                        return 1;
                    }
                },
                {
                    key: 'stroke',
                    value: function stroke(comp) {
                        comp._impl.stroke();
                    }
                },
                {
                    key: 'fill',
                    value: function fill(comp) {
                        comp._impl.fill();
                    }
                },
                {
                    key: 'clear',
                    value: function clear() {
                    }
                }
            ]);
            return CanvasGraphicsAssembler;
        }();
        exports.default = CanvasGraphicsAssembler;
        _assembler2.default.register(_graphics2.default, CanvasGraphicsAssembler);
        module.exports = exports['default'];
    }
    if (nodeEnv) {
        __define(__module.exports, __require, __module);
    } else {
        __quick_compile__.registerModuleFunc(__filename, function () {
            __define(__module.exports, __require, __module);
        });
    }
}());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,